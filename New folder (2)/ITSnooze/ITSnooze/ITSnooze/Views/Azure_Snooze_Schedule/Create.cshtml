@model ITSnooze.Models.Azure_Snooze_Schedule

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>
<script>
    function dateChanged() {
        //This func is called on button click
        var a = document.getElementById("StartDateTime").value;
        var b = document.getElementById("StopDateTime").value;
        var c = '1';
        //c is a variable to ensure validation of starttime < stop time
        //the value of c is checked in the Edit controller method
        if (b <= a) {
            alert("Select a stop time later than start time");
            c = '0';
            $.ajax({
                type: "POST",
                dataType: 'text',
                url: "../Azure_Snooze_Schedule/getdetails?x=" + a + "&y=" + b + "&flag=" + c,

            })
        }
        else {
            c = '1';
            $.ajax({
                type: "POST",
                dataType: 'text',
                url: "../Azure_Snooze_Schedule/getdetails?x=" + a + "&y=" + b + "&flag=" + c,

            })
        }

    }
</script>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        //Used to retrieve the server names based upon the AppTeam selected.
        $("#AppTeam").change(function () {
            var selectedItem = $(this).val();
            var showSelectProper = $("#showSelectProper");
            if (selectedItem == 0) {
                showSelectProper.show();
            }
            else {
                showSelectProper.hide();
                var xServers = $("#Servers");
                var serversProgress = $("#servers-loading-progress");
                serversProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    dataType: 'json',
                    url: "../Azure_Snooze_Immediate/GetServerNames?AppTeamName=" + selectedItem,
                    success: function (data) {
                        xServers.html('');
                        var options = "<option>Select</option>";
                        for (var i = 0; i < data.length; i++) {
                            options += "<option val='" + data[i].id + "'>" + data[i].name + "</option>";
                        }
                        xServers.append(options);

                        serversProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve servers.');
                        serversProgress.hide();
                    }

                });
            }
        });
    });
</script>


<script type="text/javascript">
    $(function () {
        $('#datetimepicker1').datetimepicker({
            minDate: moment(),
            daysOfWeekDisabled: [0, 6]
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $('#datetimepicker2').datetimepicker({
            minDate: moment(),
            daysOfWeekDisabled: [0, 6]
        });
    });
</script>

<script>
    //To display the SnoozeStart and Snooze End based on checkbox selection
    $(document).ready(function () {
        if ($('#Time').is(":checked"))

            $('#TimeSelect').show("fast");
        else
            $('#TimeSelect').hide("fast");
    });

    $(document).ready(function () {
        $('#Time').click(function () {
            if (this.checked) {
                $('#TimeSelect').show("fast");
            }
            else
                $('#TimeSelect').hide("fast");
        });
    });

</script>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4> New Scheduled Snooze/UnSnooze Request</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AppTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppTeam", ViewData["AppTeam"] as List<SelectListItem>, new { @class = "form-control" })
                <span id="showSelectProper" style="display: none;">Select a team</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Server, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Servers" name="Server" class="form-control"></select>
                <span id="servers-loading-progress" style="display: none;">Please wait..</span>
                <span id="select-proper-server" style="display: none;">Select a server..</span>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Snooze Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    <div class='col-sm-3'>

                        <div class='input-group date' id='datetimepicker1'>
                            <input type='text' id="StartDateTime" class="form-control" onchange="dateChanged()" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>        
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Unsnooze Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    <div class='col-sm-3'>
                        <div class='input-group date' id='datetimepicker2'>
                            <input type='text' id="StopDateTime" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        @Html.HiddenFor(model => model.LastModifiedTime, htmlAttributes: new { Value = System.DateTime.Now.ToString(), @class = "form-control" })
        @Html.HiddenFor(model => model.LastModifiedBy, htmlAttributes: new { Value = (string)System.Web.HttpContext.Current.User.Identity.Name, @class = "form-control" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="dateChanged()"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
